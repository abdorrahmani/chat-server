// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: chat.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Existing unary types
type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ChatMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ChatResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Streaming types
type ClientEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ClientEvent_Join
	//	*ClientEvent_Text
	Payload       isClientEvent_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientEvent) Reset() {
	*x = ClientEvent{}
	mi := &file_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientEvent) ProtoMessage() {}

func (x *ClientEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientEvent.ProtoReflect.Descriptor instead.
func (*ClientEvent) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ClientEvent) GetPayload() isClientEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ClientEvent) GetJoin() *Join {
	if x != nil {
		if x, ok := x.Payload.(*ClientEvent_Join); ok {
			return x.Join
		}
	}
	return nil
}

func (x *ClientEvent) GetText() *Text {
	if x != nil {
		if x, ok := x.Payload.(*ClientEvent_Text); ok {
			return x.Text
		}
	}
	return nil
}

type isClientEvent_Payload interface {
	isClientEvent_Payload()
}

type ClientEvent_Join struct {
	Join *Join `protobuf:"bytes,1,opt,name=join,proto3,oneof"` // join with username and optional password
}

type ClientEvent_Text struct {
	Text *Text `protobuf:"bytes,2,opt,name=text,proto3,oneof"` // broadcast text or commands (/pm, /quit)
}

func (*ClientEvent_Join) isClientEvent_Payload() {}

func (*ClientEvent_Text) isClientEvent_Payload() {}

type Join struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // optional; required only if server asks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Join) Reset() {
	*x = Join{}
	mi := &file_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Join) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Join) ProtoMessage() {}

func (x *Join) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Join.ProtoReflect.Descriptor instead.
func (*Join) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (x *Join) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Join) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Text struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // supports /pm <username> <message> and /quit
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Text) Reset() {
	*x = Text{}
	mi := &file_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

func (x *Text) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ServerEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ServerEvent_Prompt
	//	*ServerEvent_Notice
	//	*ServerEvent_Chat
	//	*ServerEvent_Echo
	Payload       isServerEvent_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerEvent) Reset() {
	*x = ServerEvent{}
	mi := &file_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerEvent) ProtoMessage() {}

func (x *ServerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerEvent.ProtoReflect.Descriptor instead.
func (*ServerEvent) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5}
}

func (x *ServerEvent) GetPayload() isServerEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ServerEvent) GetPrompt() *Prompt {
	if x != nil {
		if x, ok := x.Payload.(*ServerEvent_Prompt); ok {
			return x.Prompt
		}
	}
	return nil
}

func (x *ServerEvent) GetNotice() *Notice {
	if x != nil {
		if x, ok := x.Payload.(*ServerEvent_Notice); ok {
			return x.Notice
		}
	}
	return nil
}

func (x *ServerEvent) GetChat() *Chat {
	if x != nil {
		if x, ok := x.Payload.(*ServerEvent_Chat); ok {
			return x.Chat
		}
	}
	return nil
}

func (x *ServerEvent) GetEcho() *Echo {
	if x != nil {
		if x, ok := x.Payload.(*ServerEvent_Echo); ok {
			return x.Echo
		}
	}
	return nil
}

type isServerEvent_Payload interface {
	isServerEvent_Payload()
}

type ServerEvent_Prompt struct {
	Prompt *Prompt `protobuf:"bytes,1,opt,name=prompt,proto3,oneof"` // e.g., "Enter your username:", "Enter password:"
}

type ServerEvent_Notice struct {
	Notice *Notice `protobuf:"bytes,2,opt,name=notice,proto3,oneof"` // server system messages
}

type ServerEvent_Chat struct {
	Chat *Chat `protobuf:"bytes,3,opt,name=chat,proto3,oneof"` // chat messages from others
}

type ServerEvent_Echo struct {
	Echo *Echo `protobuf:"bytes,4,opt,name=echo,proto3,oneof"` // "ME: <message>"
}

func (*ServerEvent_Prompt) isServerEvent_Payload() {}

func (*ServerEvent_Notice) isServerEvent_Payload() {}

func (*ServerEvent_Chat) isServerEvent_Payload() {}

func (*ServerEvent_Echo) isServerEvent_Payload() {}

type Prompt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Prompt) Reset() {
	*x = Prompt{}
	mi := &file_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Prompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prompt) ProtoMessage() {}

func (x *Prompt) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prompt.ProtoReflect.Descriptor instead.
func (*Prompt) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{6}
}

func (x *Prompt) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Notice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notice) Reset() {
	*x = Notice{}
	mi := &file_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notice) ProtoMessage() {}

func (x *Notice) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notice.ProtoReflect.Descriptor instead.
func (*Notice) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{7}
}

func (x *Notice) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Chat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chat) Reset() {
	*x = Chat{}
	mi := &file_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat) ProtoMessage() {}

func (x *Chat) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat.ProtoReflect.Descriptor instead.
func (*Chat) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{8}
}

func (x *Chat) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Chat) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Echo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Echo) Reset() {
	*x = Echo{}
	mi := &file_chat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Echo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Echo) ProtoMessage() {}

func (x *Echo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Echo.ProtoReflect.Descriptor instead.
func (*Echo) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{9}
}

func (x *Echo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_chat_proto protoreflect.FileDescriptor

const file_chat_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"chat.proto\x12\x04chat\"5\n" +
	"\vChatMessage\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"&\n" +
	"\fChatResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\\\n" +
	"\vClientEvent\x12 \n" +
	"\x04join\x18\x01 \x01(\v2\n" +
	".chat.JoinH\x00R\x04join\x12 \n" +
	"\x04text\x18\x02 \x01(\v2\n" +
	".chat.TextH\x00R\x04textB\t\n" +
	"\apayload\">\n" +
	"\x04Join\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\" \n" +
	"\x04Text\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\xac\x01\n" +
	"\vServerEvent\x12&\n" +
	"\x06prompt\x18\x01 \x01(\v2\f.chat.PromptH\x00R\x06prompt\x12&\n" +
	"\x06notice\x18\x02 \x01(\v2\f.chat.NoticeH\x00R\x06notice\x12 \n" +
	"\x04chat\x18\x03 \x01(\v2\n" +
	".chat.ChatH\x00R\x04chat\x12 \n" +
	"\x04echo\x18\x04 \x01(\v2\n" +
	".chat.EchoH\x00R\x04echoB\t\n" +
	"\apayload\"\x1c\n" +
	"\x06Prompt\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"\x1c\n" +
	"\x06Notice\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\".\n" +
	"\x04Chat\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"\x1a\n" +
	"\x04Echo\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text2u\n" +
	"\vChatService\x124\n" +
	"\vSendMessage\x12\x11.chat.ChatMessage\x1a\x12.chat.ChatResponse\x120\n" +
	"\x04Chat\x12\x11.chat.ClientEvent\x1a\x11.chat.ServerEvent(\x010\x01B\x03Z\x01/b\x06proto3"

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData []byte
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_proto_rawDesc), len(file_chat_proto_rawDesc)))
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_chat_proto_goTypes = []any{
	(*ChatMessage)(nil),  // 0: chat.ChatMessage
	(*ChatResponse)(nil), // 1: chat.ChatResponse
	(*ClientEvent)(nil),  // 2: chat.ClientEvent
	(*Join)(nil),         // 3: chat.Join
	(*Text)(nil),         // 4: chat.Text
	(*ServerEvent)(nil),  // 5: chat.ServerEvent
	(*Prompt)(nil),       // 6: chat.Prompt
	(*Notice)(nil),       // 7: chat.Notice
	(*Chat)(nil),         // 8: chat.Chat
	(*Echo)(nil),         // 9: chat.Echo
}
var file_chat_proto_depIdxs = []int32{
	3, // 0: chat.ClientEvent.join:type_name -> chat.Join
	4, // 1: chat.ClientEvent.text:type_name -> chat.Text
	6, // 2: chat.ServerEvent.prompt:type_name -> chat.Prompt
	7, // 3: chat.ServerEvent.notice:type_name -> chat.Notice
	8, // 4: chat.ServerEvent.chat:type_name -> chat.Chat
	9, // 5: chat.ServerEvent.echo:type_name -> chat.Echo
	0, // 6: chat.ChatService.SendMessage:input_type -> chat.ChatMessage
	2, // 7: chat.ChatService.Chat:input_type -> chat.ClientEvent
	1, // 8: chat.ChatService.SendMessage:output_type -> chat.ChatResponse
	5, // 9: chat.ChatService.Chat:output_type -> chat.ServerEvent
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	file_chat_proto_msgTypes[2].OneofWrappers = []any{
		(*ClientEvent_Join)(nil),
		(*ClientEvent_Text)(nil),
	}
	file_chat_proto_msgTypes[5].OneofWrappers = []any{
		(*ServerEvent_Prompt)(nil),
		(*ServerEvent_Notice)(nil),
		(*ServerEvent_Chat)(nil),
		(*ServerEvent_Echo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_proto_rawDesc), len(file_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}
